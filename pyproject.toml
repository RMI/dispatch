[build-system]
requires = ["setuptools<66", "setuptools_scm[toml]<8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rmi.dispatch"
description = "A simple and efficient dispatch model."
license = {file = "LICENSE.txt"}
readme = "README.rst"
dynamic = ["version"]
classifiers = [
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.10,<3.11"
dependencies = [
    "bottleneck >= 1.3,< 1.3.7",
    "numba >= 0.55.1,<0.57",
    "numexpr >= 2.8, < 2.8.5",
    "numpy >= 1.18.5,<2",
    "pandas >= 1.4,< 1.6",
    "pandera >= 0.12, <0.14",
    "pyarrow>=7, <11",
    "rmi.etoolbox @ git+https://github.com/rmi/etoolbox.git",
]

[project.optional-dependencies]
dev = [
    "black[jupyter] >= 22,<23",
    "docformatter>=1.5,<1.6",
    "isort>=5.0,<5.12",
    "tox>=3.20,<4.4",
    "twine>=3.3,<4.1",  # Used to make releases to PyPI
]
doc = [
    "doc8>=0.9,<1.2",
    "furo>=2022.4.7",
    "sphinx>=4,!=5.1.0,<6.1.4",
    "sphinx-autoapi>=1.8,<2.1",
    "sphinx-issues>=1.2,<3.1",
    "sphinx-autodoc-typehints>1.19,<1.21.8",
    "sphinxcontrib-mermaid>0.7,<=0.7.1",
]
tests = [
    "bandit[toml]>=1.6,<1.8",
    "blackdoc>=0.3.8,<0.3.9",  # runs black on doctests
    "coverage>=5.3,<7.1",
    "doc8>=0.9,<1.2",
    "flake8>=4.0,<6.1",
    "flake8-builtins>=1.5,<2.2",
    "flake8-docstrings>=1.5,<1.7",
    "flake8-pyproject>1.0,<1.3",
    "flake8-rst-docstrings>=0.2,<0.4",
    "flake8-use-fstring>=1.0,<1.5",
    "mccabe>=0.6,<0.8",
    "mypy>=0.942,<0.992",
    "pep8-naming>=0.12,<0.14",
    "pre-commit>=2.9,<2.22",
    "pydocstyle>=5.1,<6.4",
    "pytest>=6.2,<7.3",
    "pytest-console-scripts>=1.1,<1.4",
    "pytest-cov>=2.10,<4.1",
    "rstcheck[sphinx,toml]>=5.0,<6.2",
    "tox>=3.20,<4.4",
]
viz = [
    "plotly>5.10,<5.13",
    "kaleido>0.2,<0.2.2",
]

[tool.setuptools.dynamic]
version = {attr = "dispatch._version.__version__"}

[tool.setuptools_scm]
write_to = "src/dispatch/_version.py"

#######################################################################################
# Configurations for linters and other tools
#######################################################################################

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.black]
line-length = 88
target-version = ["py310", "py311"]
include = "\\.pyi?$"

[tool.docformatter]
wrap-summaries = 88
wrap-descriptions = 88

[tool.doc8]
max-line-length = 88
ignore-path = "docs/_build"

[tool.flake8]
extend-ignore = [
    # * W503, W504: Line break before / after binary operator.
    "W503", "W504",
    "D401", # * D401: Imperative mood.
    "E501", # * E501: Overlong line
    "E203", # * E203: Space before ':' (black recommends to ignore)
    # * RST201,RST203,RST301: Google docstrings aren't RST until after being processed by
    #   Napoleon. See https://github.com/peterjc/flake8-rst-docstrings/issues/17
    "RST201",  "RST203",  "RST301",
    "D105",
#    "C901" # We have a backlog of complex functions being skipped with noqa: C901
]
max-complexity = 10
inline-quotes = "double"
max-line-length = 88
docstring-convention = "google"
# Files and directories that should not be subject to linting
extend-exclude = [
    ".env_tox",
    ".eggs",
    "build",
]
rst-roles =[
    "attr",
    "class",
    "doc",
    "func",
    "meth",
    "mod",
    "obj",
    "py:const",
    "ref",
    "user",
]
rst-directives =[
    "envvar",
    "exception",
]
percent-greedy = 2
format-greedy = 2
per-file-ignores = [
    "__init__.py:F401",
    "engine.py:C901"  # the dispatch engine is quite complicated
]

[tool.isort]
profile = "black"
known_first_party = ["dispatch"]

[tool.pytest.ini_options]
testpaths = ["."]
addopts = ["--verbose", "--doctest-modules"]
log_format = "%(asctime)s [%(levelname)8s] %(name)s:%(lineno)s %(message)s"
log_date_format=" %Y-%m-%d %H:%M:%S"
log_cli = true
log_cli_level = "INFO"
doctest_optionflags = ["NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL", "ELLIPSIS"]
filterwarnings = [
    "ignore:distutils Version classes are deprecated:DeprecationWarning",
    "ignore:Creating a LegacyVersion:DeprecationWarning:pkg_resources[.*]",
]

[tool.rstcheck]
report_level = "WARNING"
ignore_roles = ["pr", "issue", "user", "include"]
ignore_messages = '(Hyperlink target .* is not referenced\.$|Duplicate implicit target name:|An `AttributeError` error occured.*)'
ignore_directives = ["bibliography", "todo", "include"]
