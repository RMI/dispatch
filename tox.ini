[tox]
envlist =
    ci
;    build
isolated_build = True

[testenv]
extras =
    tests
    doc
    viz
allowlist_externals =
    bash
    coverage
    sphinx-build
    twine
skip_install = false
covargs = --cov={envsitepackagesdir}/dispatch --cov-append --cov-report=lcov:coverage.info
covreport = coverage report --sort=cover

[testenv:linters]
description = Run the pre-commit, flake8, rstcheck, doc8 and bandit linters.
commands =
    pre-commit run --all-files --show-diff-on-failure python-no-eval
    pre-commit run --all-files --show-diff-on-failure python-no-log-warn
    pre-commit run --all-files --show-diff-on-failure python-check-blanket-noqa
    pre-commit run --all-files --show-diff-on-failure check-merge-conflict
    pre-commit run --all-files --show-diff-on-failure check-yaml
    pre-commit run --all-files --show-diff-on-failure check-case-conflict
    pre-commit run --all-files --show-diff-on-failure debug-statements
    pre-commit run --all-files --show-diff-on-failure name-tests-test
    ruff check .
;    bandit -c pyproject.toml -r src/dispatch/
;    flake8

[testenv:docs]
description = Build the HTML docs from scratch using Sphinx.
commands =
    bash -c 'rm -rf docs/_build'
    doc8 docs/ README.rst
    rstcheck --config pyproject.toml --recursive ./
    sphinx-build -b html docs docs/_build

[testenv:ci]
description = Run all continuous integration (CI) checks & generate test coverage.
recreate = true
commands =
    coverage erase
    {[testenv:linters]commands}
    {[testenv:docs]commands}
    pytest {posargs} {[testenv]covargs} --doctest-modules {envsitepackagesdir}/dispatch tests
    {[testenv]covreport}

[testenv:build]
description = Prepare Python source and binary packages for release.
basepython = python3
commands =
    bash -c 'rm -rf build/* dist/*'
    python -m build --sdist --wheel
